package itproger;

public class TestLearn8 {

  public static void main(String[] args) {
//    Массивы данных
//    Одномерные и многомерные массивы
//    массивы данных они очень схожи с переменными,
//    разница в том, что в массиве мы можем хранить сразу множество различных значений
//    но в переменной мы всегда можем хранить какое то одно конкретное значение
// При создании массива нам необходимо указать тип данных, далее указать название,
//    далее необходимо указать какие конкретно элементы,
//    какие значения будут находиться в самом массиве
//    создаем массив, который будет хранить в себе различные целые числа
//    квадратные скобки указывают на то, что мы создаем не переменную, а именно массив
//    и мы в эти квадратные скобки, можем записать множество элементов
//    далее необходимо придумать название для массива
//    далее указать размерность
//    но сначала нужно выделить память, для выделения памяти мы используем

    int[] nums = new int[5];
    nums[0] = 45;
    nums[1] = 32;
    nums[2] = 1;
    nums[3] = 9;
    nums[4] = 3;
    int res = nums[2] + nums[3];
    System.out.println(res);

    float[] nums2 = new float[] {5.0f, 6.45f, 89.984f};
    System.out.println(nums2[1]);

//    Переберем какой-либо массив при помощи цикла
//    при помощи этого же цикла мы выведем каждый элемент самого массива на экран
//    для перебора массива при помощи циклов мы можем использовать
//    любой из циклов for, while, do while
// i < nums2.length - возвращает длину всего массива

    for(int i = 0; i < nums2.length; i++) {
//      при таком вызове мы получим то, что когда
//      мы первый раз будем проходить этот цикл у нас i изначально будет 0
//      как только мы пройдем этот цикл i увеличится на единицу
//      и в System.out.println(nums2[i]); будет подставляться 1, потом 2 и так далее
      System.out.println("Element: " + nums2[i]);

//      при помощи циклов можно взаимодействовать с массивами намного эффективнее
    }
  }

}
